# -*- coding: utf-8 -*-
"""DL LAB 9.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1tSnrS6G79TiU5gzPHj5Y8k6sWISLyVox
"""

import cv2
import matplotlib.pyplot as plt

# Load image
image = cv2.imread('/content/sample.jpg')  # Upload image to Colab or change path
image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# Increase brightness
brightness = 50
bright_image = cv2.convertScaleAbs(image_rgb, alpha=1, beta=brightness)

# Display original and brightened images
plt.figure(figsize=(10,5))
plt.subplot(1,2,1)
plt.imshow(image_rgb)
plt.title('Original Image')
plt.axis('off')

plt.subplot(1,2,2)
plt.imshow(bright_image)
plt.title('Brightened Image')
plt.axis('off')
plt.show()

from google.colab import files
uploaded = files.upload()

import cv2
import matplotlib.pyplot as plt
import numpy as np

# Upload se filename nikaalo
filename = list(uploaded.keys())[0]

# Image load karo
image = cv2.imread(filename)
image_rgb = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)

# Brightness barhao
brightness = 50
bright_image = cv2.convertScaleAbs(image_rgb, alpha=1, beta=brightness)

# Display original and brightened image
plt.figure(figsize=(10,5))

plt.subplot(1,2,1)
plt.imshow(image_rgb)
plt.title('Original Image')
plt.axis('off')

plt.subplot(1,2,2)
plt.imshow(bright_image)
plt.title('Brightened Image')
plt.axis('off')

plt.show()

#Assignment 2

# Convert to grayscale
gray_image = cv2.cvtColor(image_rgb, cv2.COLOR_RGB2GRAY)

# Apply Sobel Edge Detection
sobelx = cv2.Sobel(gray_image, cv2.CV_64F, 1, 0, ksize=5)
sobely = cv2.Sobel(gray_image, cv2.CV_64F, 0, 1, ksize=5)
sobel_combined = cv2.magnitude(sobelx, sobely)

# Display images
plt.figure(figsize=(12,5))
plt.subplot(1,2,1)
plt.imshow(gray_image, cmap='gray')
plt.title('Grayscale Image')
plt.axis('off')

plt.subplot(1,2,2)
plt.imshow(sobel_combined, cmap='gray')
plt.title('Sobel Edge Detection')
plt.axis('off')
plt.show()